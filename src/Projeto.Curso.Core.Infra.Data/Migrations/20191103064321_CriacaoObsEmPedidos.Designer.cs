// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto.Curso.Core.Infra.Data.Context;

namespace Projeto.Curso.Core.Infra.Data.Migrations
{
    [DbContext(typeof(PedidosContext))]
    [Migration("20191103064321_CriacaoObsEmPedidos")]
    partial class CriacaoObsEmPedidos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projeto.Curso.Core.Domain.Pedidos.Aggregates.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPedido")
                        .HasColumnName("idPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnName("idProduto")
                        .HasColumnType("int");

                    b.Property<int>("QTD")
                        .HasColumnName("qtd")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProduto");

                    b.ToTable("ItensPedido");
                });

            modelBuilder.Entity("Projeto.Curso.Core.Domain.Pedidos.Aggregates.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnName("dataEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnName("dataPedido")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCliente")
                        .HasColumnName("idCliente")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnName("varchar(500)")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Projeto.Curso.Core.Domain.Pedidos.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Apelido")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Projeto.Curso.Core.Domain.Pedidos.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Projeto.Curso.Core.Domain.Pedidos.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnName("apelido")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nomeProduto")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnName("unidade")
                        .HasColumnType("varchar(2)");

                    b.Property<decimal>("Valor")
                        .HasColumnName("valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Projeto.Curso.Core.Domain.Pedidos.Aggregates.ItemPedido", b =>
                {
                    b.HasOne("Projeto.Curso.Core.Domain.Pedidos.Aggregates.Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto.Curso.Core.Domain.Pedidos.Entities.Produto", "Produto")
                        .WithMany("ItensPedido")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto.Curso.Core.Domain.Pedidos.Aggregates.Pedido", b =>
                {
                    b.HasOne("Projeto.Curso.Core.Domain.Pedidos.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto.Curso.Core.Domain.Pedidos.Entities.Cliente", b =>
                {
                    b.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.Documento", "Documento", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnName("cpfCnpj")
                                .HasColumnType("varchar(14)");

                            b1.HasKey("ClienteId");

                            b1.HasIndex("Numero")
                                .IsUnique()
                                .HasFilter("[cpfCnpj] IS NOT NULL");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.Email", "Email", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Endereco")
                                .HasColumnName("email")
                                .HasColumnType("varchar(100)");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Bairro")
                                .HasColumnName("bairro")
                                .HasColumnType("varchar(60)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnName("cidade")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Complemento")
                                .HasColumnName("complemento")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnName("endereco")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnName("numeroEndereco")
                                .HasColumnType("varchar(20)");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");

                            b1.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.CEP", "CEP", b2 =>
                                {
                                    b2.Property<int>("EnderecoClienteId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Codigo")
                                        .IsRequired()
                                        .HasColumnName("cep")
                                        .HasColumnType("varchar(9)");

                                    b2.HasKey("EnderecoClienteId");

                                    b2.ToTable("Clientes");

                                    b2.WithOwner()
                                        .HasForeignKey("EnderecoClienteId");
                                });

                            b1.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.UF", "UF", b2 =>
                                {
                                    b2.Property<int>("EnderecoClienteId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.HasKey("EnderecoClienteId");

                                    b2.ToTable("Clientes");

                                    b2.WithOwner()
                                        .HasForeignKey("EnderecoClienteId");

                                    b2.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.Estado", "Estado", b3 =>
                                        {
                                            b3.Property<int>("UFEnderecoClienteId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<string>("Sigla")
                                                .IsRequired()
                                                .HasColumnName("uf")
                                                .HasColumnType("varchar(2)");

                                            b3.HasKey("UFEnderecoClienteId");

                                            b3.ToTable("Clientes");

                                            b3.WithOwner()
                                                .HasForeignKey("UFEnderecoClienteId");
                                        });
                                });
                        });
                });

            modelBuilder.Entity("Projeto.Curso.Core.Domain.Pedidos.Entities.Fornecedor", b =>
                {
                    b.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.Documento", "Documento", b1 =>
                        {
                            b1.Property<int>("FornecedorId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnName("cpfCnpj")
                                .HasColumnType("varchar(14)");

                            b1.HasKey("FornecedorId");

                            b1.HasIndex("Numero")
                                .IsUnique()
                                .HasFilter("[cpfCnpj] IS NOT NULL");

                            b1.ToTable("Fornecedores");

                            b1.WithOwner()
                                .HasForeignKey("FornecedorId");
                        });

                    b.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.Email", "Email", b1 =>
                        {
                            b1.Property<int>("FornecedorId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Endereco")
                                .HasColumnName("email")
                                .HasColumnType("varchar(100)");

                            b1.HasKey("FornecedorId");

                            b1.ToTable("Fornecedores");

                            b1.WithOwner()
                                .HasForeignKey("FornecedorId");
                        });

                    b.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("FornecedorId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Bairro")
                                .HasColumnName("bairro")
                                .HasColumnType("varchar(60)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnName("cidade")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Complemento")
                                .HasColumnName("complemento")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnName("endereco")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnName("numeroEndereco")
                                .HasColumnType("varchar(20)");

                            b1.HasKey("FornecedorId");

                            b1.ToTable("Fornecedores");

                            b1.WithOwner()
                                .HasForeignKey("FornecedorId");

                            b1.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.CEP", "CEP", b2 =>
                                {
                                    b2.Property<int>("EnderecoFornecedorId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Codigo")
                                        .IsRequired()
                                        .HasColumnName("cep")
                                        .HasColumnType("varchar(9)");

                                    b2.HasKey("EnderecoFornecedorId");

                                    b2.ToTable("Fornecedores");

                                    b2.WithOwner()
                                        .HasForeignKey("EnderecoFornecedorId");
                                });

                            b1.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.UF", "UF", b2 =>
                                {
                                    b2.Property<int>("EnderecoFornecedorId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.HasKey("EnderecoFornecedorId");

                                    b2.ToTable("Fornecedores");

                                    b2.WithOwner()
                                        .HasForeignKey("EnderecoFornecedorId");

                                    b2.OwnsOne("Projeto.Curso.Core.Domain.Shared.ValuesObject.Estado", "Estado", b3 =>
                                        {
                                            b3.Property<int>("UFEnderecoFornecedorId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<string>("Sigla")
                                                .IsRequired()
                                                .HasColumnName("uf")
                                                .HasColumnType("varchar(2)");

                                            b3.HasKey("UFEnderecoFornecedorId");

                                            b3.ToTable("Fornecedores");

                                            b3.WithOwner()
                                                .HasForeignKey("UFEnderecoFornecedorId");
                                        });
                                });
                        });
                });

            modelBuilder.Entity("Projeto.Curso.Core.Domain.Pedidos.Entities.Produto", b =>
                {
                    b.HasOne("Projeto.Curso.Core.Domain.Pedidos.Entities.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
